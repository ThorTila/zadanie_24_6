'use strict';var _jsxFileName = '/mnt/d/\u0141ukasz/Documents/Programowanie/kodilla/24 Testy/scorekeeper/src/App.test.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _enzyme = require('enzyme');
var _App = require('./App');var _App2 = _interopRequireDefault(_App);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

it('renders without crashing', function () {
  (0, _enzyme.shallow)(_react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 6 }, __self: undefined }));
});

it('update player score', function () {
  var app = (0, _enzyme.shallow)(_react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 10 }, __self: undefined })),
  players = [
  {
    name: 'Kunegunda',
    score: 5 },

  {
    name: 'Antoś',
    score: 0 }],


  onScoreUpdate = app.find('PlayersList').prop('onScoreUpdate');
  app.setState({ players });
  onScoreUpdate(0, 5);
  var playersAfterUpdate = app.state().players;
  expect(playersAfterUpdate[0].score).toEqual(10);
});

it('add player', function () {
  var app = (0, _enzyme.shallow)(_react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 29 }, __self: undefined })),
  onPlayerAdd = app.find('AddPlayer').prop('onPlayerAdd');
  onPlayerAdd('Ania');
  var players = app.state('players');
  expect(players.length).toEqual(1);
  expect(players[0].name).toEqual('Ania');
  expect(players[0].score).toEqual(0);
});

it('delete player', function () {
  var app = (0, _enzyme.shallow)(_react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 39 }, __self: undefined })),
  players = [
  {
    name: 'Kunegunda',
    score: 5 },

  {
    name: 'Antoś',
    score: 0 }],


  onPlayerDelete = app.find('PlayersList').prop('onPlayerDelete');
  onPlayerDelete(0);
  var playersAfterUpdate = app.state('players');
  expect(players.length).toEqual(1);
  expect(players[0].name).toEqual('Anto');
  expect(players[0].score).toEqual(0);
});